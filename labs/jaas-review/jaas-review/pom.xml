<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>jaas-review</artifactId>
	<packaging>war</packaging>
	<name>Comprehensive Review 3 web app Project</name>
	<description>This is the third comprehensive review for JB183</description>
	<parent>
		<groupId>com.redhat.training</groupId>
		<artifactId>parent-pom</artifactId>
		<version>1.0</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>

		<!-- First declare the APIs we depend on and need for compilation. All
			of them are provided by JBoss EAP -->
			<!-- Import the CDI API, we use provided scope as the API is included in
					JBoss EAP -->
			<dependency>
					<groupId>javax.enterprise</groupId>
					<artifactId>cdi-api</artifactId>
					<scope>provided</scope>
			</dependency>

			<!-- Import the Common Annotations API (JSR-250), we use provided scope
					as the API is included in JBoss EAP -->
			<dependency>
					<groupId>org.jboss.spec.javax.annotation</groupId>
					<artifactId>jboss-annotations-api_1.2_spec</artifactId>
					<scope>provided</scope>
			</dependency>

			<!-- Import the JAX-RS API, we use provided scope as the API is included
					in JBoss EAP -->
			<dependency>
					<groupId>org.jboss.spec.javax.ws.rs</groupId>
					<artifactId>jboss-jaxrs-api_2.0_spec</artifactId>
					<scope>provided</scope>
			</dependency>

			<!-- Import the JPA API, we use provided scope as the API is included in
					JBoss EAP -->
			<dependency>
					<groupId>org.hibernate.javax.persistence</groupId>
					<artifactId>hibernate-jpa-2.1-api</artifactId>
					<scope>provided</scope>
			</dependency>

			<!-- Import the EJB API, we use provided scope as the API is included in
					JBoss EAP -->
			<dependency>
					<groupId>org.jboss.spec.javax.ejb</groupId>
					<artifactId>jboss-ejb-api_3.2_spec</artifactId>
					<scope>provided</scope>
			</dependency>

			<!-- Bean Validation Implementation -->
			<!-- Provides portable constraints such as @Email -->
			<!-- Hibernate Validator is shipped in JBoss EAP -->
			<dependency>
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate-validator</artifactId>
					<scope>provided</scope>
					<exclusions>
							<exclusion>
									<groupId>org.slf4j</groupId>
									<artifactId>slf4j-api</artifactId>
							</exclusion>
					</exclusions>
			</dependency>

					 <dependency>
							<groupId>org.hibernate</groupId>
							<artifactId>hibernate-entitymanager</artifactId>
							 <scope>provided</scope>
					</dependency>

					<!-- Annotation processor to generate the JPA metamodel classes
							for typesafe criteria queries -->
					<dependency>
							<groupId>org.hibernate</groupId>
							<artifactId>hibernate-jpamodelgen</artifactId>
							<scope>provided</scope>
					</dependency>

					<!-- Needed for running tests (you may also use TestNG) -->
					<dependency>
							<groupId>junit</groupId>
							<artifactId>junit</artifactId>
							<scope>test</scope>
					</dependency>

			<!-- Import the JSF API, we use provided scope as the API is included in
					JBoss EAP -->
			<dependency>
					<groupId>org.jboss.spec.javax.faces</groupId>
					<artifactId>jboss-jsf-api_2.2_spec</artifactId>
					<scope>provided</scope>
			</dependency>

			<dependency>
			<groupId>org.jboss.spec.javax.servlet</groupId>
			<artifactId>jboss-servlet-api_3.1_spec</artifactId>
		<scope>provided</scope>
		</dependency>

			<!-- Annotation processor that raising compilation errors whenever constraint
					annotations are incorrectly used. -->
			<dependency>
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate-validator-annotation-processor</artifactId>
					<scope>provided</scope>
			</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<scope>provided</scope>
		</dependency>


	</dependencies>

	<build>
		<finalName>jaas-review</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>${version.war.plugin}</version>
				<extensions>false</extensions>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<archive>
						<manifestEntries>
							<Dependencies>com.google.guava,org.slf4j
							</Dependencies>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<!-- This profile skips all tests, though you can tune it to run just
				unit tests based on a custom pattern -->
			<!-- Separate profiles are provided for running all tests, including Arquillian
				tests that execute in the specified container -->
			<!-- Use this profile if you just want to build a WAR file without running
				any unit tests -->
			<!-- Run like this: mvn clean package -Pdefault -->
			<id>default</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${version.surefire.plugin}</version>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- An optional Arquillian testing profile that executes tests in a remote
				JBoss EAP instance -->
			<!-- Run with: mvn clean test -Parq-wildfly-remote or, simply run: mvn
				test -->
			<!-- To make it easy to run tests from within JBDS, this profile is set
				as active by default -->
			<id>arq-wildfly-remote</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<dependencies>
				<dependency>
					<groupId>org.wildfly.arquillian</groupId>
					<artifactId>wildfly-arquillian-container-remote</artifactId>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>
	</profiles>

</project>
